---
- hosts: kube_control_plane[0]
  gather_facts: no
  tasks:
    - name: Copy kubeconfig from master to local
      fetch:
        src: /root/.kube/config
        dest: /conf/.kube/
        flat: yes
      register: cp_kubeconf_result
      until: cp_kubeconf_result is not failed
      retries: 10
      when: not undo|default(false)|bool

    - name: 'Try to check kube-vip {{ kube_vip_address }}'
      shell: 'ip a | grep {{ kube_vip_address }}'
      register: vip_result
      until: vip_result is not failed
      retries: 20
      delay: 20
      when: (kube_vip_address is defined) and (kube_vip_address|length > 0)

- hosts: localhost
  gather_facts: false
  vars:
    cluster_name: "{{ lookup('env','CLUSTER_NAME') }}"
    kubeconfig_name: "{{ cluster_name }}-kubeconf"
    local_kube_config: /conf/.kube/config
    first_master_host: "{{ hostvars[groups['kube_control_plane'][0]].ansible_host }}"
  tasks:

    # Install
    - name: Update first_master_host when kube_vip
      set_fact:
        first_master_host: "{{ kube_vip_address }}"
      when: (kube_vip_address is defined) and (kube_vip_address|length > 0)

    - name: Update kubeconfig server
      shell: "sed -i 's/127.0.0.1:.*/{{ first_master_host }}:6443/' {{ local_kube_config }}"
      args:
        executable: /bin/bash
      register: update_kubeconfig_result
      failed_when: update_kubeconfig_result.stderr
      when: not undo|default(false)|bool

    - name: Check kubeconfig configmap
      shell: "/usr/local/bin/kubectl -n kubean-system get configmap {{ kubeconfig_name }}"
      args:
        executable: /bin/bash
      register: kubeconfig_cm
      ignore_errors: true

    - name: Delete kubeconfig configmap
      shell: "/usr/local/bin/kubectl -n kubean-system delete configmap {{ kubeconfig_name }}"
      args:
        executable: /bin/bash
      when: kubeconfig_cm.rc == 0

    - name: Create kubeconfig configmap
      shell: "/usr/local/bin/kubectl -n kubean-system create configmap {{ kubeconfig_name }} --from-file={{ local_kube_config }}"
      args:
        executable: /bin/bash
      register: create_cm_result
      until: create_cm_result.rc == 0
      retries: 5
      delay: 5
      when: not undo|default(false)|bool

    - name: Patch kubeconfRef info
      shell: >
        /usr/local/bin/kubectl patch --type=merge clusters.kubean.io {{ cluster_name }} -p '{"spec": {"kubeconfRef": {"name": "'{{ kubeconfig_name }}'", "namespace": "kubean-system"}}}'
      args:
        executable: /bin/bash
      register: patch_ref_result
      until: patch_ref_result.rc == 0
      retries: 5
      delay: 5
      when: not undo|default(false)|bool

    # Uninstall

    - name: Clean kubeconfRef info
      shell: >
        /usr/local/bin/kubectl patch --type=merge clusters.kubean.io {{ cluster_name }} -p '{"spec": {"kubeconfRef": null}}'
      args:
        executable: /bin/bash
      register: clean_ref_result
      until: clean_ref_result.rc == 0
      retries: 5
      delay: 5
      when: undo|default(false)|bool

    - name: Delete local kubeconfig file
      shell: "rm -rf {{ local_kube_config }}"
      args:
        executable: /bin/bash
      ignore_errors: true
      when: undo|default(false)|bool
