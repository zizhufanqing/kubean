// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubean-io/kubean-api/apis/clusteroperation/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterOperationLister helps list ClusterOperations.
// All objects returned here must be treated as read-only.
type ClusterOperationLister interface {
	// List lists all ClusterOperations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterOperation, err error)
	// Get retrieves the ClusterOperation from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ClusterOperation, error)
	ClusterOperationListerExpansion
}

// clusterOperationLister implements the ClusterOperationLister interface.
type clusterOperationLister struct {
	indexer cache.Indexer
}

// NewClusterOperationLister returns a new ClusterOperationLister.
func NewClusterOperationLister(indexer cache.Indexer) ClusterOperationLister {
	return &clusterOperationLister{indexer: indexer}
}

// List lists all ClusterOperations in the indexer.
func (s *clusterOperationLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterOperation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterOperation))
	})
	return ret, err
}

// Get retrieves the ClusterOperation from the index for a given name.
func (s *clusterOperationLister) Get(name string) (*v1alpha1.ClusterOperation, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusteroperation"), name)
	}
	return obj.(*v1alpha1.ClusterOperation), nil
}
