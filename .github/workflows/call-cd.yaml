name: cd

on:
  workflow_call:
    inputs:
      ENVIRONMENT_RUNS_ON:
        required: true
        type: string
      ENRIRONMENT_CD:
        required: true
        type: string
      CI_TYPE:
        required: true
        type: string

jobs:
  cd:
    runs-on: ${{ inputs.ENVIRONMENT_RUNS_ON }}
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: cd
        run: |
            # install helm binary
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh

            if [ -n "${{ secrets.CD_IMAGE_TAG }}" ]; then
              export IMAGE_TAG="${{ secrets.CD_IMAGE_TAG }}"
            fi
          
            if [ ${{ inputs.CI_TYPE }} == 'main' ]; then
              export IMAGE_TAG=$(git describe --tags --abbrev=8 --dirty)-main
            fi

            if [ ${{ inputs.ENRIRONMENT_CD }} == 'dev' ]; then

              # kubeconfig init
              echo 'cd to ${{ inputs.ENRIRONMENT_CD }} '
              echo "${{ secrets.DEV_KUBECONFIG }}" > kubeconfig
              chmod o-r kubeconfig
              chmod g-r kubeconfig

              # cd to dev
              if [ -n "${{ secrets.KUBEAN_IMAGE_REPO }}" ]; then
                export IMAGE_REPO="${{ secrets.KUBEAN_IMAGE_REPO }}"
              fi
              make local-chart-to-deploy

            elif [ ${{ inputs.ENRIRONMENT_CD }} == 'alpha' ]; then

              echo 'cd to ${{ inputs.ENRIRONMENT_CD }} '
              echo "${{ secrets.ALPHA_KUBECONFIG }}" > kubeconfig
              chmod o-r kubeconfig
              chmod g-r kubeconfig

              # cd to alpha
              make local-chart-to-deploy
              
            else
              echo 'enviroment not exist'
              exit 1
            fi
