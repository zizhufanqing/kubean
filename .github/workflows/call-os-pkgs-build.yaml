name: OS Packages Build

on: workflow_call

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: centos7
            dockerfile: build/os-packages/Dockerfile.centos7
          - name: redhat8
            dockerfile: build/os-packages/Dockerfile.redhat8
          - name: kylinv10
            dockerfile: build/os-packages/Dockerfile.kylinv10
          - name: ubuntu1804
            dockerfile: build/os-packages/Dockerfile.ubuntu1804
          - name: ubuntu2004
            dockerfile: build/os-packages/Dockerfile.ubuntu2004
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Build OS packages to local
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          outputs: type=local,dest=./
          build-args: |
            RHEL_REG_USER=${{ secrets.RHEL_REG_USER }}
            RHEL_REG_PASS=${{ secrets.RHEL_REG_PASS }}

      - name: Make OS packages into Tar files
        shell: bash
        run: |
          mkdir -p os-pkgs/
          mv linux_amd64/resources resources
          tar -I pigz -cf os-pkgs/os-pkgs-amd64.tar.gz resources --remove-files
          mv linux_arm64/resources resources
          tar -I pigz -cf os-pkgs/os-pkgs-arm64.tar.gz resources --remove-files
          sha256sum os-pkgs/os-pkgs-{amd64,arm64}.tar.gz > os-pkgs/os-pkgs.sha256sum.txt
          cp artifacts/import_ospkgs.sh os-pkgs/
          tar -I pigz -cf os-pkgs-${{ matrix.name }}-${{ github.ref_name }}.tar.gz os-pkgs/ --remove-files

      - name: Release and upload packages
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          generate_release_notes: true
          files: |
            os-pkgs-${{ matrix.name }}-${{ github.ref_name }}.tar.gz
